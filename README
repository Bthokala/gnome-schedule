gnome-schedule
--------------

	o. See the file COPYING for the license.
	o. See the AUTHORS file for the authors of this tool
	o. See the INSTALL file for information about installing this tool
	o. Checkout the doc/ directory for user documentation

Dependencies
------------

 Gnome Schedule needs
 
	o. at,  batch,  atq, atrm, queue
	o. crontab
	o. Python
	o. PyGTK >= 2.3
	o. Python GConf

Support
-------

  o. Mailinglists: You can talk to the developers and some other users
     of gnome-schedule here:
 
	o. http://lists.sourceforge.net/mailman/listinfo/gnome-schedule-users

  o. An unstable PyGTK? Why?!

  The reason why we are using an unstable version of PyGTK is because
  the stable version of PyGTK is to incomplete for serious GNOME -and
  Gtk >= 2.4 application development. You can try proving me wrong... 
  However, I won't listen to your whining. So to answer the question 
  that will probably get asked most: No we will not backport to a stable 
  version of PyGTK. You are free to wait for the major distributions to
  include PyGTK >= 2.4 or install an unstable version of PyGTK.

   Note that if you don't install PyGTK using your standard prefix, you
   will have to use something like this before running the ./autogen.sh
   and/or ./configure scripts:
 
   export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig

   For distributors: A script $prefix/bin/gnome-schedule. It's generated
   from the src/gnome-schedule.in file. It will also set the PYTHONPATH
   evironment variable correct for the session that will run the python
   script. This way it's possible to both compile and run the application
   without the need for globally registering the location of the PyGTK
   libraries.

Compiling and HACKING
---------------------

  GNOME Schedule is (being) written using the programming language Python
  and uses the PyGTK and Python-GConf bindings. No we are not planning
  to rewrite the tool in Perl just so that you can prove that Perl can
  do the same thing. To be honest, that would be a silly, stupid and 
  idiot-only thing to do. So don't even try thinking about asking. I 
  even think Larry Wall would agree with me on this one. You probably
  don't know who Larry Wall is, else you would not be thinking about
  asking the question (in case you where thinking about asking it).

  Anyway, for the Slashdot-I-ONLY-Love-Perl type of nitwits: If you're
  trying to look smart by saying how much Python sucks, try proving it
  to me by coding in stead of whining. 

  You can talk to the developers of gnome-schedule about development
  related issues here:

	o. http://lists.sourceforge.net/mailman/listinfo/gnome-schedule-devel

  To compile GNOME Schedule from CVS you will also need

	o. A CVS client
	o. autoconf and the other auto* tools (version >= 1.7)
	o. gnome-common which you can pull from the cvs.gnome.org
  	o. You can get the latest version of PyGTK from cvs.gnome.org.
	o. You will need the latest version of PyGTK to get the version
	   in CVS compiled.

  To make contributions you should first read

	o. HACKING
	o. README.cvs
	o. AUTHORS
	o. The source code itself :-)

  To help with translations

	o. Check out the po/ directory. You can use gTranslator and
	   the other intl tools for translations. You should contact
	   the GNOME Translation team as they are the responsible
	   organisation for the translation of the GNOME desktop
	o. Other than only the generated po-files you should also
	   check out the file src/lang.py
